(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{504:function(t,e,a){"use strict";a.r(e);var s=a(43),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Here is a list of APIs that can return some images and notes of the process of setting up NoneBot and CoolQ HTTP API (on my Mac).")]),t._v(" "),a("h2",{attrs:{id:"misc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#misc"}},[t._v("#")]),t._v(" Misc")]),t._v(" "),a("p",[t._v("I wrote a qqbot which can throw a picture of tempting food back to the people who send pictures of tempting food to you (which we called '放毒' in Chinese) automatically. I called this bot "),a("a",{attrs:{href:"https://github.com/Renovamen/AntiFood",target:"_blank",rel:"noopener noreferrer"}},[t._v("AntiFood")]),t._v(", it is based on "),a("a",{attrs:{href:"https://github.com/richardchien/nonebot",target:"_blank",rel:"noopener noreferrer"}},[t._v("NoneBot")]),t._v(". So here is a list of APIs that can return some images and notes of the process of setting up NoneBot and "),a("a",{attrs:{href:"https://github.com/richardchien/coolq-http-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("CoolQ HTTP API")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"image-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#image-apis"}},[t._v("#")]),t._v(" Image APIs")]),t._v(" "),a("ul",[a("li",[t._v("Unsplash\n"),a("ul",[a("li",[t._v("Offical: https://source.unsplash.com/")]),t._v(" "),a("li",[t._v("Lorem Picsum: https://picsum.photos/")])])]),t._v(" "),a("li",[t._v("Cats: https://thecatapi.com/")]),t._v(" "),a("li",[t._v("Dogs: https://shibe.online/")]),t._v(" "),a("li",[t._v("Anime: http://img.xjh.me/")])]),t._v(" "),a("p",[t._v("Finally, I choose to crawl food pictures from Baidu Image...")]),t._v(" "),a("h2",{attrs:{id:"coolq-http-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coolq-http-api"}},[t._v("#")]),t._v(" CoolQ HTTP API")]),t._v(" "),a("p",[t._v("NoneBot depends on CoolQ HTTP API ("),a("a",{attrs:{href:"https://cqhttp.cc/docs/4.14/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs")]),t._v("), it can be deployed by using docker.")]),t._v(" "),a("p",[t._v("Pull docker image and create a folder for CoolQ:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker pull richardchien/cqhttp:latest\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" coolq\n")])])]),a("p",[t._v("Run it (on "),a("code",[t._v("127.0.0.1:9000")]),t._v(", default password is "),a("code",[t._v("MAX8char")]),t._v("):")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker run -ti --rm --name cqhttp-test "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n           -v "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("/coolq:/home/user/coolq "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v(":9000 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5700")]),t._v(":5700 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COOLQ_ACCOUNT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456789")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# qq id of the bot")]),t._v("\n           -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COOLQ_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://dlsec.cqp.me/cqp-tuling "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CQHTTP_SERVE_DATA_FILES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           richardchien/cqhttp:latest\n")])])]),a("h2",{attrs:{id:"nonebot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nonebot"}},[t._v("#")]),t._v(" NoneBot")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://nonebot.cqp.moe/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Here")]),t._v(" are docs of NoneBot.")]),t._v(" "),a("p",[t._v("Modify "),a("code",[t._v("coolq/app/io.github.richardchien.coolqhttpapi/config/123456789.ini")]),t._v(" (config file of CoolQ):")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("123456789")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("serve_data_files")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("yes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ws_reverse_api_url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("ws://host.docker.internal:8080/ws/api/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ws_reverse_event_url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("ws://host.docker.internal:8080/ws/event/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("use_ws_reverse")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("Here use "),a("code",[t._v("host.docker.internal")]),t._v(" but not "),a("code",[t._v("127.0.0.1")]),t._v(", because here CoolQ is running in docker.")]),t._v(" "),a("p",[t._v("Install NoneBot:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nonebot\n")])])]),a("p",[t._v("Then, just run "),a("code",[t._v("bot.py")]),t._v(".")]),t._v(" "),a("p",[t._v("Note that sending images needs CoolQ Pro, and CoolQ's CQ code can only send images under "),a("code",[t._v("coolq/data/image/")]),t._v(". But CoolQ HTTP API "),a("a",{attrs:{href:"https://cqhttp.cc/docs/4.14/#/CQCode",target:"_blank",rel:"noopener noreferrer"}},[t._v("enhances")]),t._v(" it.")])])}),[],!1,null,null,null);e.default=n.exports}}]);